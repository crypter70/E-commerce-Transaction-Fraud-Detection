data_source:
    directory: 'data/raw/'
    file_name: Fraud_Data.csv
    columns: ['browser', 'source', 'age', 'sex', 'purchase_value', 'class']
    features: ['browser', 'source', 'age', 'sex', 'purchase_value']
    target_name: 'class'
    cat_features: ['browser', 'source', 'sex']
    num_features: ['age', 'purchase_value']
    test_size: 0.30
    random_state: 42
    
    
train_test_data:
    directory: 'data/processed/'
    raw_dataset: raw_dataset.pkl
    X_train: X_train.pkl
    y_train: y_train.pkl
    X_test: X_test.pkl
    y_test: y_test.pkl
    X_train_feng: X_train_feng.pkl
    y_train_feng: y_train_feng.pkl
    X_test_feng: X_test_feng.pkl
    y_test_feng: y_test_feng.pkl
    
    
data_defense:
    browser: 
        value: ['Chrome', 'IE', 'Safari', 'FireFox', 'Opera']
    source: 
        value: ['SEO', 'Ads', 'Direct']
    age:
    - 18
    - 76
    sex: 
        value: ['M', 'F']
    purchase_value:
    - 9
    - 154


ls_model:
  random_state: [42]
  
  # Decision Tree
  dt:
    criterion: ['gini', 'entropy']
    max_depth: [10, 20, 30, 40, 50, 60, 70]
    class_weight: ['balanced']
    
  # Random Forest
  rf:
    n_estimators: [50, 100, 200, 300, 400]
    max_depth: [10, 20, 30, 40, 50, 60, 70]
    min_samples_split: [2, 5, 7]
    class_weight: ['balanced']
    
    
# final model: RandomForest
final_model:
    model_directory: 'models/'
    model_name: Random_Forest_Classifier.pkl
    parameter:
        class_weight: 'balanced'
        min_samples_split: 5
        n_estimators: 50
        random_state: 42
  
